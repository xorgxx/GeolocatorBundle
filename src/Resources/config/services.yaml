services:
    # Services principaux
    geolocator.service:
        class: GeolocatorBundle\Service\GeolocatorService
        arguments:
            $providers: [] # Rempli par le compiler pass
            $storage: '@geolocator.storage'
            $banManager: '@geolocator.ban_manager'
            $countryFilter: '@geolocator.country_filter'
            $ipFilter: '@geolocator.ip_filter'
            $vpnDetector: '@geolocator.vpn_detector'
            $crawlerFilter: '@geolocator.crawler_filter'
            $logger: '@monolog.logger.geolocator'
            $config: '%geolocator.config%'
            $ipResolver: '@geolocator.ip_resolver'
            $eventDispatcher: '@?event_dispatcher'
            $asyncManager: '@?geolocator.async_manager'
#        calls:
#            - ['setContainer', ['@service_container']]
        public: true

#    GeolocatorBundle\Service\GeolocatorService: '@geolocator.service'

    # Providers de géolocalisation
    geolocator.provider.ipapi:
        class: GeolocatorBundle\Provider\IpapiProvider
        arguments:
            $httpClient: '@http_client'
            $config: '%geolocator.providers.list.ipapi%'
        tags:
            - { name: 'geolocator.provider', alias: 'ipapi' }

    geolocator.provider.ipwhois:
        class: GeolocatorBundle\Provider\IpwhoisProvider
        arguments:
            $httpClient: '@http_client'
            $config: '%geolocator.providers.list.ipwhois%'
        tags:
            - { name: 'geolocator.provider', alias: 'ipwhois' }

    geolocator.provider.ipqualityscore:
        class: GeolocatorBundle\Provider\IpqualityscoreProvider
        arguments:
            $httpClient: '@http_client'
            $config: '%geolocator.providers.list.ipqualityscore%'
        tags:
            - { name: 'geolocator.provider', alias: 'ipqualityscore' }
            
    geolocator.provider.local:
        class: GeolocatorBundle\Provider\LocalProvider
        arguments:
            $httpClient: '@http_client'
            $config: { }
            $logger: '@monolog.logger.geolocator'
        tags:
            - { name: 'geolocator.provider', alias: 'local' }

    # Stockage
    geolocator.storage.memory:
        class: GeolocatorBundle\Storage\MemoryStorage

    geolocator.storage.json:
        class: GeolocatorBundle\Storage\JsonStorage
        arguments:
            $filePath: '%geolocator.storage%'

    geolocator.storage.redis:
        class: GeolocatorBundle\Storage\RedisStorage
        arguments:
            $redisDsn: '%geolocator.storage.redis_dsn%'

    # Alias de stockage
    geolocator.storage:
        alias: geolocator.storage.json # Par défaut on utilise le stockage JSON
        # Cet alias sera remplacé dynamiquement par l'extension selon la configuration

    # Gestionnaire de ban
    geolocator.ban_manager:
        class: GeolocatorBundle\Service\BanManager
        arguments:
            $storage: '@geolocator.storage'
            $config: '%geolocator.bans%'
            $logger: '@monolog.logger.geolocator'

    # Filtres
    geolocator.country_filter:
        class: GeolocatorBundle\Service\CountryFilter
        arguments:
            $config: '%geolocator.country_filters%'

    geolocator.ip_filter:
        class: GeolocatorBundle\Service\IpFilter
        arguments:
            $config: '%geolocator.ip_filters%'
            $logger: '@monolog.logger.geolocator'

    geolocator.vpn_detector:
        class: GeolocatorBundle\Service\VpnDetector
        arguments:
            $config: '%geolocator.vpn_detection%'
            $providers: [] # Rempli par le compiler pass
            $allowedIps: '%geolocator.vpn_detection%'

    geolocator.crawler_filter:
        class: GeolocatorBundle\Service\CrawlerFilter
        arguments:
            $config: '%geolocator.crawler_filter%'

    # Événements et listeners
    geolocator.event_listener:
        class: GeolocatorBundle\EventListener\GeolocatorListener
        arguments:
            $geolocator: '@geolocator.service'
            $redirectUrl: '%geolocator.redirect_on_ban%'
            $enabled: '%geolocator.enabled%'
            $simulate: '%geolocator.simulate%'
            $ignoredRoutes: '%geolocator.ignored_routes%'
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 30 }

    geolocator.geo_filter_listener:
        class: GeolocatorBundle\EventListener\GeoFilterListener
        arguments:
            $geolocator: '@geolocator.service'
            $globalRedirectUrl: '%geolocator.redirect_on_ban%'
        tags:
            - { name: kernel.event_subscriber }

    # Data collectors pour le profiler
    geolocator.data_collector:
        class: GeolocatorBundle\DataCollector\GeolocatorDataCollector
        arguments:
            $geolocator: '@geolocator.service'
            $enabled: '%geolocator.profiler.enabled%'
        tags:
            - { name : data_collector, template : '@Geolocator/Collector/geolocator.html.twig' }
#            - { name: data_collector, template: '@!GeolocatorBundle/Resources/views/Collector/geolocator.html.twig', id: 'geolocator' }

    # Monolog handler
    monolog.logger.geolocator:
        class: Monolog\Logger
        arguments: ['geolocator']
        calls:
            - [pushHandler, ['@monolog.handler.geolocator']]

    monolog.handler.geolocator:
        class: Monolog\Handler\StreamHandler
        arguments:
            - '%kernel.logs_dir%/geolocator.log'
            - 'debug' # Niveau plus détaillé pour voir tous les logs

    # Service de résolution d'IP sécurisé
    geolocator.ip_resolver:
        class: GeolocatorBundle\Service\IpResolver
        arguments:
            $trustedHeaders: '%geolocator.ip_filters%'
#            $trustedProxies: '%geolocator.trusted_proxies%'

    # HTTP Client service pour les appels API
    http_client:
        class: Symfony\Component\HttpClient\HttpClient
        factory: ['Symfony\Component\HttpClient\HttpClient', 'create']

#    # Service de gestion asynchrone
#    geolocator.async_manager:
#        class: GeolocatorBundle\Service\AsyncManager
#        arguments:
#            $messengerEnabled: '%geolocator.async.enabled%'
#            $rabbitEnabled: false
#            $redisEnabled: false
#            $mercureEnabled: false
#            $messageBus: '@messenger.bus.default'
#            $logger: '@monolog.logger.geolocator'
#        calls:
#            - [setMessengerEnabled, ['%geolocator.async.enabled%']]
#
#    # Service de géolocalisation asynchrone
#    GeolocatorBundle\Service\AsyncGeolocator:
#        arguments:
#            $geolocator: '@geolocator.service'
#            $asyncManager: '@geolocator.async_manager'
#            $logger: '@monolog.logger.geolocator'

    # Alias for backward compatibility
    geolocator.async_geolocator:
        alias: GeolocatorBundle\Service\AsyncGeolocator

    # Contrôleur de base abstrait
    geolocator.controller.base:
        abstract: true
        class: GeolocatorBundle\Controller\BaseGeolocatorController
        arguments:
            $geolocator: '@geolocator.service'
            $enabled: '%geolocator.enabled%'
            $simulate: '%geolocator.simulate%'
            $redirectOnBan: '%geolocator.redirect_on_ban%'
