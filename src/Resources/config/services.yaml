parameters:
    # Injection brute de toute la config geolocator
    geolocator.config: '%geolocator%'

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    # --- Import des services principaux par domaine ---
    GeolocatorBundle\Service\:
        resource: '../../Service'

#    GeolocatorBundle\Provider\:
#        resource: '../../Provider'

    GeolocatorBundle\Export\:
        resource: '../../Export'

    GeolocatorBundle\Command\:
        resource: '../../Command'
        tags: ['console.command']

    # --- Écouteurs et abonnés d'événements ---
    GeolocatorBundle\EventSubscriber\:
        resource: '../../EventSubscriber'
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    # --- Filtres géographiques ---
    GeolocatorBundle\Filter\:
        resource: '../../Filter'
        tags: ['neox.geofilter.filter']

    # Enregistrement automatique des providers
    GeolocatorBundle\Provider\:
        resource: '../../Provider'
        tags: ['geolocator.provider']

    # Manager des providers
    GeolocatorBundle\Service\ProviderManager:
        arguments:
            $config: '%geolocator.config%'
            $taggedProviders: !tagged_iterator geolocator.provider
            $logger: '@logger'

    # Configuration spécifique pour le filtre VPN
    GeolocatorBundle\Filter\VpnFilter:
        arguments:
            $enabled: '%geolocator.vpn_detection.enabled%'
            $allowedIps: '%geolocator.vpn_detection.allowed_ips%'
            $logger: '@logger'
        tags: ['neox.geofilter.filter']

    # --- Déclarations explicites pour services spécifiques ---
    GeolocatorBundle\Service\WebhookNotifier:
        arguments:
            $httpClient: '@http_client'
            $webhookUrls: '%geolocator.webhooks%'
            $logger: '@logger'

    GeolocatorBundle\Filter\FilterChain:
        arguments:
            $filters: !tagged_iterator neox.geofilter.filter

    GeolocatorBundle\Service\AsyncGeolocator :
        arguments :
            $transport : '%geolocator.messenger_transport%'

    GeolocatorBundle\DataCollector\GeolocatorDataCollector:
        arguments:
            $asyncLocator: '@GeolocatorBundle\Service\AsyncGeolocator'
        tags:
            - { name: data_collector, template: '@Geolocator/collector/geolocator.html.twig', id: geolocator }

    GeolocatorBundle\EventSubscriber\GeoFilterSubscriber:
        arguments:
            $ipResolver: '@GeolocatorBundle\Service\IpResolver'
            $geolocatorService: '@GeolocatorBundle\Service\GeolocatorService'
            $banManager: '@GeolocatorBundle\Service\BanManager'
            $filterChain: '@GeolocatorBundle\Filter\FilterChain'
            $eventDispatcher: '@event_dispatcher'
            $params: '@parameter_bag'

    GeolocatorBundle\Service\IpResolver:
        bind:
            $filterFlags: '%geolocator.ip_filter_flags%'

    GeolocatorBundle\Service\GeolocationCache:
        arguments:
            $cachePool: '@cache.app'
            $providerManager: '@GeolocatorBundle\Service\ProviderManager'
            $ttl: '%geolocator.cache_ttl%'

    GeolocatorBundle\Service\BotDetector:
        arguments:
            $botPatterns: '%geolocator.bot_patterns%'
            $challengeMode: '%geolocator.bot_challenge_enabled%'

    session: '@Symfony\Component\HttpFoundation\RequestStack'

    GeolocatorBundle\Service\BanManager:
        arguments:
            $config: '%geolocator%'
            $logger: '@logger'
            $eventBridge: '@?GeolocatorBundle\Bridge\GeolocatorEventBridgeInterface'

#    GeolocatorBundle\Service\ProviderManager:
#        arguments:
#            $providers: !tagged_iterator geolocator.provider

    # Configuration explicite pour FilterResult
    GeolocatorBundle\Filter\FilterResult:
        arguments:
            $blocked: false # Valeur par défaut
